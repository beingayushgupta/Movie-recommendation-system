# -*- coding: utf-8 -*-
"""
Created on Wed Jan 30 16:55:02 2019

@author: Udit
"""
import math
import numpy as np
import pandas as pd
import random
from CFModel import CFModel
ratings = pd.read_csv('ratings.csv', sep='\t', encoding='latin-1', 
usecols=['user_id', 'movie_id', 'user_emb_id', 'movie_emb_id', 'rating'])
users = pd.read_csv('users.csv', sep='\t', encoding='latin-1', 
usecols=['user_id', 'gender', 'zipcode', 'age_desc', 'occ_desc'])
movies = pd.read_csv('movies.csv', sep='\t', encoding='latin-1', 
usecols=['movie_id', 'title', 'genres'])
max_userid = ratings['user_id'].drop_duplicates().max()
max_movieid = ratings['movie_id'].drop_duplicates().max()
K_FACTORS = 100

trained_model = CFModel(max_userid, max_movieid, K_FACTORS)
# Load weights
TEST_USER=45
trained_model.load_weights('weights.h5')
users[users['user_id'] == TEST_USER]
def predict_rating(user_id, movie_id):
    return trained_model.rate(user_id - 1, movie_id - 1)
user_ratings = ratings[ratings['user_id'] == TEST_USER][['user_id', 'movie_id', 'rating']]
user_ratings['prediction'] = user_ratings.apply(lambda x: predict_rating(TEST_USER, x['movie_id']), axis=1)
print(user_ratings.sort_values(by='rating', ascending=False).merge(movies,on='movie_id',how='inner',suffixes=['_u', '_m']).head(20))
recommendations = ratings[ratings['movie_id'].isin(user_ratings['movie_id']) == False][['movie_id']].drop_duplicates()
recommendations['prediction'] = recommendations.apply(lambda x: predict_rating(TEST_USER, x['movie_id']), axis=1)
r=recommendations.sort_values(by='prediction',
                          ascending=False).merge(movies,
                                                 on='movie_id',
                                                 how='inner',
                                                 suffixes=['_u', '_m']).head(20)
trend=ratings[ratings['rating']==5].drop_duplicates(subset=['user_id']).merge(movies,on='movie_id',how='inner',suffixes=['_r','_m']).drop_duplicates(subset=['movie_id']).head(20)
print(trend)
s=r.get_values()
print(r)